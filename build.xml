<project name="HUBConfiguration" default="package" basedir="../">

    <!-- **You will need to have a 'MW_HOME' environment variable set in order 
		for this build script to work. To build Oracle service bus projects it is 
		dependant on libraries inside the OSB/WL install. i.e. MW_HOME=C:\Oracle\Middleware\v11.1.1.5.0 -->
    
    
    <property name="config.project" value="HUBConfiguration" />     

    <condition property="destination" value="${user.name}">
        <not>  
            <isset property="destination"/>
        </not>
    </condition>
    <property file="${basedir}/${config.project}/properties/${destination}-weblogic.properties" />
    
  
    <property name="middleware.home"    value="${oracle.middleware.home4build}" />  
    <property name="wl.home"      value="${middleware.home}/wlserver_10.3" />   
    <property name="wl.osb.home"           value="${middleware.home}/Oracle_OSB1" />
    <property name="eclipse.home"       value ="${middleware.home}/${eclipseVersion}" />
	
    <!-- **The name of the customization template for the osb projects -->
    <!--  -DcustomizationFile=cluster-customization.xml  -->   
    <condition property="customizationFile" value="customization.xml">
        <not>  
            <isset property="customizationFile"/>
        </not>
    </condition>	
           
    <path id="library.osb">
       <fileset dir="${wl.osb.home}/modules">
         <include name="com.bea.common.configfwk_1.5.0.0.jar"/>
         <include name="com.bea.core.xml.xmlbeans_2.1.0.0_2-5-1.jar"/>
       </fileset>
       <fileset dir="${wl.home}/server/lib">
         <include name="weblogic.jar"/>
       </fileset>
       <fileset dir="${wl.osb.home}/lib">
         <include name="alsb.jar"/>
       </fileset>
    </path>

   
    <!-- **A listing of the osb projects to be included in the build. This list 
		will need to be ammended each time a project is added. -->
	<property name="project.names" value="ExternalResources,PoliceServices,eBenchServices,CommonResources,CMSServices,CollectServices,CommonServices" />

	<!-- **Unfortunately no way to derive include patterns from the project 
		names without including additonal ant libraries. This list will need to be 
		ammended each time a project is added. -->
	<property name="project.includes"
		value="${config.project}/**,ExternalResources/**,PoliceServices/**,eBenchServices/**,CommonResources/**,CMSServices/**,CollectServices/**,CommonServices/**" />

    <!-- **A temporary directory for staging the build -->
	<property name="tmp.dir" value="${basedir}/.tmp" />     
        

    <!-- **A simple task to delete target and temporary directories -->
    <target name="clean">
        <delete dir="${basedir}/target" />
        <delete dir="${tmp.dir}" />
    </target>

    <!--
		 **This target builds a single jar file containing all hub projects. Additionally a
		 a customization file is built for each environment.
	-->
	<target name="package" depends="clean">
           
		<stage />
				        
		<copy file="${basedir}/${config.project}/deploy.xml" todir="${basedir}/target/" />
		        
        <copy todir="${basedir}/target" >
        
            <fileset dir="${basedir}/${config.project}" >
                <include name="scripts/**" />
                <include name="osbconfig/**" />
                <include name="plans/**" />
                <include name="properties/*weblogic.properties" />
            </fileset>
		</copy>
        <!-- real build process --> 
		<export />
        
       
        
	</target>
	
     <!-- make zip for EST-->
	<target name="releasePackage" depends="package">
		<zip destfile="${basedir}/${project.name}.${release.number}.zip" basedir="${basedir}/target" />
	</target>
  

    <!-- **This macro stages the projects in a temporary directory. A workaround to get
		 the wlst export to work. -->
    <macrodef name="stage">
        <sequential>
            <mkdir dir="${tmp.dir}" />
            <copy todir="${tmp.dir}">
                <fileset dir="${basedir}" includes="${project.includes}"
					excludes="${tmp.dir},**/osbconfig/, **/scripts" />
            </copy>
        </sequential>
    </macrodef>

	<!--
		 **This uses the export facility built into Oracle's Eclipse IDE to generate jar files that
		 can be imported into the OSB
	-->
	<macrodef name="export">
		<attribute name="config" default="${config.project}" />
		<attribute name="jar.name" default="${build.jar}" />
		<attribute name="config.subproject" default="${project.names}" />
		<sequential>
			<mkdir dir="${basedir}/target" />
			<java dir="${wl.osb.home}/lib" classpathref="library.osb"
				jar="${eclipse.home}/plugins/org.eclipse.equinox.launcher_1.1.1.R36x_v20101122_1400.jar"
				fork="true" failonerror="true" maxmemory="1024m">
                <jvmarg line="-XX:MaxPermSize=512m"/> 
                <arg line="-data ${tmp.dir}" />
                <arg line="-application com.bea.alsb.core.ConfigExport" />
                <arg line="-configProject ${config.project}" />
                <arg line="-configJar ${basedir}/target/@{jar.name}" />
                <arg line="-configSubProjects @{config.subproject}" />
                <arg line="-includeDependencies ${config.includeDependencies}" />
                <sysproperty key="osb.home" value="${wl.osb.home}" />
                <sysproperty key="weblogic.home" value="${wl.home}" />
                <sysproperty key="harvester.home" value="${wl.osb.home}/harvester" />
                <sysproperty key="osgi.bundlefile.limit" value="5000" />
                <sysproperty key="osgi.nl" value="en_US" />
                <sysproperty key="sun.lang.ClassLoader.allowArraySyntax" value="true"/> 
                <sysproperty key="middleware.home" value="${middleware.home}"/>
                
            </java>
        </sequential>
    </macrodef>

    <target name="package-deploy" depends="package">
        <subant target="deploy">
            <fileset dir="${basedir}/target" includes="deploy.xml"/>
        </subant>
    
    </target>

</project>